{"version":3,"sources":["components/Empty.js","components/Resources.js","components/Icon.js","components/Badge.js","components/Modal.js","components/Finding.js","components/Toggle.js","components/Stats.js","components/Contact.js","components/Findings.js","components/Octo.js","components/Loader.js","App.js","index.js"],"names":["Empty","className","width","height","fill","viewBox","id","x","y","patternUnits","React","Component","Resources","resources","this","props","map","res","idx","key","status","resource","COLOR","Icon","renderIconGlobalOld","size","xmlns","d","renderIconGlobal","stroke","strokeLinecap","strokeLinejoin","strokeWidth","renderIconAWS","renderIconGCP","renderIconAzure","renderIconK8s","finding","platform","toLowerCase","Badge","value","color","text","Modal","handleEscapeKey","event","keyCode","handleClose","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","renderFailedFields","console","log","JSON","stringify","result","Fragment","severity","effort","refs","references","style","display","onClick","category","title","description","remediation","validation","reference","href","url","target","rel","ref","length","Finding","renderFailColumns","open","Toggle","containerClasses","handledClasses","position","push","join","role","aria-checked","tabIndex","aria-hidden","Stats","state","findings","totalResults","totalFailed","filter","totalPassed","passPercent","toFixed","failPercent","totalResources","total","reduce","t","v","passResources","passed","failResources","handleToggle","showFailed","showPassed","Contact","src","alt","fillRule","clipRule","Findings","currentFinding","allResources","handleModalOpen","setState","handleResourceModalOpen","flat","sort","a","b","handleModalClose","body","top","handleFindingsToggle","mode","disableBodyScroll","window","scrollY","findingsPassed","findingsFailed","close","Octo","aria-label","URL","Loader","active","results","axios","get","then","data","catch","err","message","App","ReactDOM","render","getElementById"],"mappings":"iSAuDeA,E,iLAnDX,OACE,yBAAKC,UAAU,kDACb,yBAAKA,UAAU,2CACb,yBAAKA,UAAU,yDACb,yBACEA,UAAU,iHACVC,MAAM,MACNC,OAAO,MACPC,KAAK,OACLC,QAAQ,eAER,8BACE,6BACEC,GAAG,wBACHC,EAAE,IACFC,EAAE,IACFN,MAAM,KACNC,OAAO,KACPM,aAAa,kBAEb,0BACEF,EAAE,IACFC,EAAE,IACFN,MAAM,IACNC,OAAO,IACPF,UAAU,gBACVG,KAAK,mBAIX,0BACEF,MAAM,MACNC,OAAO,MACPC,KAAK,iCAIT,yBAAKH,UAAU,YACb,gCAAYA,UAAU,QACpB,yBAAKA,UAAU,8EACb,2D,GA1CES,IAAMC,WCmCXC,E,iLAlCH,IACAC,EAAcC,KAAKC,MAAnBF,UAER,OAAIA,EAEA,yBAAKZ,UAAU,iBACb,yBAAKA,UAAU,gEACb,yBAAKA,UAAU,4FACb,2BAAOA,UAAU,cACf,+BACGY,EAAUG,KAAI,SAACC,EAAKC,GAAN,OACb,wBAAIjB,UAAU,GAAGkB,IAAKD,GACpB,wBACEjB,UAAS,0EACQ,WAAfgB,EAAIG,OAAsB,UAAY,aAGvCH,EAAIG,QAEP,wBAAInB,UAAU,gEACXgB,EAAII,mBAUX,S,GA/BMX,IAAMC,WCAxBW,EAAQ,gBAoHCC,E,2MAjHbC,oBAAsB,SAAAC,GACpB,OACE,yBACEC,MAAM,6BACNrB,QAAQ,YACRH,MAAOuB,EACPtB,OAAQsB,EACRxB,UAAWqB,EACXlB,KAAK,gBAEL,0BACEH,UAAU,cACV0B,EAAE,8X,EAMVC,iBAAmB,SAAAH,GACjB,OACE,yBACErB,KAAK,OACLC,QAAQ,YACRwB,OAAO,eACP5B,UAAWqB,GAEX,0BACEQ,cAAc,QACdC,eAAe,QACfC,YAAY,MACZL,EAAE,2M,EAMVM,cAAgB,SAAAR,GACd,OACE,yBACEC,MAAM,6BACNrB,QAAQ,YACRH,MAAOuB,EACPtB,OAAQsB,EACRxB,UAAWqB,EACXlB,KAAK,gBAEL,0BAAMuB,EAAE,8yO,EAKdO,cAAgB,SAAAT,GACd,OACE,yBACEC,MAAM,6BACNrB,QAAQ,YACRH,MAAOuB,EACPtB,OAAQsB,EACRxB,UAAWqB,EACXlB,KAAK,gBAEL,0BAAMuB,EAAE,41B,EAKdQ,gBAAkB,SAAAV,GAChB,OACE,yBACEC,MAAM,6BACNrB,QAAQ,YACRH,MAAOuB,EACPtB,OAAQsB,EACRxB,UAAWqB,EACXlB,KAAK,gBAEL,0BAAMuB,EAAE,mH,EAIdS,cAAgB,SAAAX,GACd,OACE,yBACEC,MAAM,6BACNrB,QAAQ,YACRH,MAAOuB,EACPtB,OAAQsB,EACRxB,UAAWqB,EACXlB,KAAK,gBAEL,0BAAMuB,EAAE,k6W,wEAKJ,IAAD,EACmBb,KAAKC,MAAvBsB,EADD,EACCA,QAASZ,EADV,EACUA,KAEjB,OAAQY,EAAQC,SAASC,eACvB,IAAK,MACH,OAAOzB,KAAKmB,cAAcR,GAC5B,IAAK,MACH,OAAOX,KAAKoB,cAAcT,GAC5B,IAAK,QACH,OAAOX,KAAKqB,gBAAgBV,GAC9B,IAAK,MACH,OAAOX,KAAKsB,cAAcX,GAC5B,QACE,OAAOX,KAAKc,iBAAiBH,Q,GA7GlBf,IAAMC,WC2BV6B,E,iLAzBH,IACAC,EAAU3B,KAAKC,MAAf0B,MAEJC,EAAQ,4BACRC,EAAO,MAWX,OATIF,GAVe,KAWjBC,EAAQ,gCACRC,EAAO,UAELF,GAba,KAcfC,EAAQ,0BACRC,EAAO,QAIP,0BACE1C,UAAS,qFAAgFyC,IAExFC,O,GApBWjC,IAAMC,WCiRXiC,E,2MAhRbC,gBAAkB,SAAAC,GACM,KAAlBA,EAAMC,SACR,EAAKhC,MAAMiC,e,EAIfC,kBAAoB,WAElBC,SAASC,iBAAiB,UAAW,EAAKN,iBAAiB,I,EAG7DO,qBAAuB,WAErBF,SAASG,oBAAoB,UAAW,EAAKR,iBAAiB,I,EAGhES,mBAAqB,SAAAjB,GAEnB,OADAkB,QAAQC,IAAIC,KAAKC,UAAUrB,EAAQsB,SACL,WAA1BtB,EAAQsB,OAAOvC,OAEf,kBAAC,IAAMwC,SAAP,KACE,yBAAK3D,UAAU,mDACb,wBAAIA,UAAU,+CAAd,YAGA,wBAAIA,UAAU,gDACZ,kBAAC,EAAD,CAAOwC,MAAOJ,EAAQwB,aAG1B,yBAAK5D,UAAU,+FACb,wBAAIA,UAAU,+CAAd,sBAGA,wBAAIA,UAAU,gDACZ,kBAAC,EAAD,CAAOwC,MAAOJ,EAAQyB,YAKlB,M,wEAGN,IAAD,EACwBhD,KAAKC,MAA5BsB,EADD,EACCA,QAASxB,EADV,EACUA,UAEjB,GAAIwB,EAAS,CACX,IAAM0B,EAAO1B,EAAQ2B,WAErB,OACE,yBACE/D,UAAU,iGACVgE,MAAO,CAAEC,QAAS,SAElB,yBACEjE,UAAU,mCACVkE,QAASrD,KAAKC,MAAMiC,aAEpB,yBAAK/C,UAAU,6CAGjB,yBAAKA,UAAU,yGACb,yBAAKA,UAAU,kDACb,yBAAKA,UAAU,8CACb,yBAAKA,UAAU,gCACb,yBAAKA,UAAU,2BACb,kBAAC,EAAD,CAAMoC,QAASA,EAASZ,KAAM,MAEhC,yBAAKxB,UAAU,QACb,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,+CACXoC,EAAQ+B,UAEX,uBAAGnE,UAAU,kDACVoC,EAAQgC,SAIf,yBAAKpE,UAAU,8BACb,yBACEkE,QAASrD,KAAKC,MAAMiC,YACpB/C,UAAU,kCAEV,yBACEI,QAAQ,YACRwB,OAAO,eACP3B,MAAM,KACNC,OAAO,KACPF,UAAU,eAEV,0BACE6B,cAAc,QACdC,eAAe,QACfC,YAAY,IACZL,EAAE,8BAOd,yBAAK1B,UAAU,oBACb,4BACGa,KAAKwC,mBAAmBjB,GACzB,yBAAKpC,UAAU,+FACb,wBAAIA,UAAU,+CAAd,eAGA,wBAAIA,UAAU,8DACXoC,EAAQiC,cAGb,yBAAKrE,UAAU,+FACb,wBAAIA,UAAU,+CAAd,sBAGA,wBAAIA,UAAU,8DACZ,kBAAC,EAAD,CAAWY,UAAWwB,EAAQxB,cAGlC,yBAAKZ,UAAU,+FACb,wBAAIA,UAAU,+CAAd,eAGA,wBAAIA,UAAU,8DACXoC,EAAQkC,cAGb,yBAAKtE,UAAU,+FACb,wBAAIA,UAAU,+CAAd,cAGA,wBAAIA,UAAU,8DACXoC,EAAQmC,aAGb,yBAAKvE,UAAU,+FACb,wBAAIA,UAAU,+CAAd,cAGA,wBAAIA,UAAU,8DACZ,wBAAIA,UAAU,qCACX8D,GACCA,EAAK/C,KAAI,SAACyD,EAAWvD,GAAZ,OACP,wBACEC,IAAKD,EACLjB,UAAS,UACPiB,EAAM,EAAI,2BAA6B,GADhC,wEAIT,yBAAKjB,UAAU,gCACb,yBACEA,UAAU,8DACVG,KAAK,OACLC,QAAQ,YACRwB,OAAO,gBAEP,0BACEC,cAAc,QACdC,eAAe,QACfC,YAAY,IACZL,EAAE,kFAGN,0BAAM1B,UAAU,iBACd,uBACEyE,KAAMD,EAAUE,IAChBC,OAAO,SACPC,IAAI,uBAEHJ,EAAUK,mBAiB3C,OAAIjE,GAAaA,EAAUkE,OAAS,EAEhC,yBACE9E,UAAU,iGACVgE,MAAO,CAAEC,QAAS,SAElB,yBACEjE,UAAU,mCACVkE,QAASrD,KAAKC,MAAMiC,aAEpB,yBAAK/C,UAAU,6CAGjB,yBAAKA,UAAU,yGACb,yBAAKA,UAAU,kDACb,yBAAKA,UAAU,8CACb,yBAAKA,UAAU,gCACb,yBAAKA,UAAU,8CACb,yBACEA,UAAU,qBACVG,KAAK,OACLC,QAAQ,YACRwB,OAAO,gBAEP,0BACEC,cAAc,QACdC,eAAe,QACfC,YAAY,IACZL,EAAE,sKAIR,yBAAK1B,UAAU,QACb,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,+CAAd,sBAGA,uBAAGA,UAAU,kDAAb,+CAKJ,yBAAKA,UAAU,8BACb,yBACEkE,QAASrD,KAAKC,MAAMiC,YACpB/C,UAAU,kCAEV,yBACEI,QAAQ,YACRwB,OAAO,eACP3B,MAAM,KACNC,OAAO,KACPF,UAAU,eAEV,0BACE6B,cAAc,QACdC,eAAe,QACfC,YAAY,IACZL,EAAE,8BAOd,yBAAK1B,UAAU,oBACb,4BACE,yBAAKA,UAAU,+FACb,wBAAIA,UAAU,+CAAd,aAGA,wBAAIA,UAAU,8DACZ,kBAAC,EAAD,CAAWY,UAAWA,WAUjC,S,GA7QSH,IAAMC,WCuDXqE,E,2MAvDbC,kBAAoB,WAAO,IACjB5C,EAAY,EAAKtB,MAAjBsB,QACFwB,EAAWxB,EAAQwB,SACnBC,EAASzB,EAAQyB,OAEvB,OACE,kBAAC,IAAMF,SAAP,KACE,wBAAI3D,UAAU,yDACZ,kBAAC,EAAD,CAAOwC,MAAOoB,KAEhB,wBAAI5D,UAAU,yFACZ,kBAAC,EAAD,CAAOwC,MAAOqB,O,wEAMZ,IAAD,EACmBhD,KAAKC,MAAvBsB,EADD,EACCA,QAAS6C,EADV,EACUA,KACX9D,EAASiB,EAAUA,EAAQsB,OAAOvC,OAAS,SAEjD,OACE,wBACE+C,QAASe,EACTjF,UAAsB,WAAXmB,EAAsB,uBAAyB,WAE1D,wBAAInB,UAAU,yDACZ,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,2BACb,kBAAC,EAAD,CAAMoC,QAASA,EAASZ,KAAM,MAEhC,yBAAKxB,UAAU,QACb,yBAAKA,UAAU,+CACZoC,EAAQgC,OAEX,yBAAKpE,UAAU,mCACZoC,EAAQ+B,aAKhBhD,GAAqB,WAAXA,GAAuBN,KAAKmE,oBACvC,wBAAIhF,UAAU,yDACZ,yBAAKA,UAAU,mCACZoC,EAAQC,UAEX,yBAAKrC,UAAU,mCACZoC,EAAQhB,gB,GAhDCX,IAAMC,WCkDbwE,E,iLAlDX,IAAMC,EAAmB,CACvB,WACA,eACA,gBACA,MACA,OACA,WACA,qBACA,eACA,iBACA,oBACA,cACA,eACA,qBACA,wBAEIC,EAAiB,CACrB,eACA,MACA,MACA,eACA,WACA,SACA,YACA,aACA,cACA,gBAWF,MAR4B,OAAxBvE,KAAKC,MAAMuE,UACbF,EAAiBG,KAAK,iBACtBF,EAAeE,KAAK,mBAEpBH,EAAiBG,KAAK,eACtBF,EAAeE,KAAK,kBAIpB,0BACEtF,UAAWmF,EAAiBI,KAAK,KACjCC,KAAK,WACLC,eAAsC,OAAxB5E,KAAKC,MAAMuE,SACzBK,SAAS,KAET,0BAAMC,cAAY,OAAO3F,UAAWoF,EAAeG,KAAK,Y,GA9C3C9E,IAAMC,WCsLZkF,E,2MApLbC,MAAQ,G,wEAEE,IAAD,OACCC,EAAajF,KAAKC,MAAlBgF,SACFC,EAAeD,EAAWA,EAAShB,OAAS,EAC5CkB,EAAcF,EAChBA,EAASG,QAAO,SAAA3F,GAAC,MAAwB,WAApBA,EAAEoD,OAAOvC,UAAqB2D,OACnD,EACEoB,EAAcJ,EAChBA,EAASG,QAAO,SAAA3F,GAAC,MAAwB,WAApBA,EAAEoD,OAAOvC,UAAqB2D,OACnD,EAEEqB,EAAcL,GACdI,EAAcH,EAAgB,KAAKK,QAAQ,GAC7C,EACEC,EAAcP,GACdE,EAAcD,EAAgB,KAAKK,QAAQ,GAC7C,EAEEE,EAAiBR,EACnBA,EAAS/E,KAAI,SAAAT,GAAC,OAAIA,EAAEoD,OAAO6C,SAAOC,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KACvD,EACEC,EAAgBb,EAClBA,EAAS/E,KAAI,SAAAT,GAAC,OAAIA,EAAEoD,OAAOkD,UAAQJ,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KACxD,EACEG,EAAgBf,EAAWQ,EAAiBK,EAAgB,EAElE,OACE,yBAAK3G,UAAU,6DACb,yBAAKA,UAAU,8CACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,8CACb,yBACEA,UAAU,qBACVG,KAAK,OACLC,QAAQ,YACRwB,OAAO,gBAEP,0BACEC,cAAc,QACdC,eAAe,QACfC,YAAY,IACZL,EAAE,wMAIR,yBAAK1B,UAAU,mBACb,4BACE,wBAAIA,UAAU,wDAAd,iBAGA,wBAAIA,UAAU,uBACZ,yBAAKA,UAAU,kDACZgG,GAEH,yBAAKhG,UAAU,yEACb,0BAAMA,UAAU,WAAhB,UACCqG,EAFH,UASV,yBAAKrG,UAAU,gCACb,0BACEkE,QAAS,WACP,EAAKpD,MAAMgG,aAAa,YAG1B,kBAAC,EAAD,CAAQzB,SAAUxE,KAAKC,MAAMiG,WAAa,KAAO,WAIvD,yBAAK/G,UAAU,8CACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,8CACb,yBACEA,UAAU,qBACVG,KAAK,OACLC,QAAQ,YACRwB,OAAO,gBAEP,0BACEC,cAAc,QACdC,eAAe,QACfC,YAAY,IACZL,EAAE,qMAIR,yBAAK1B,UAAU,mBACb,4BACE,wBAAIA,UAAU,wDAAd,iBAGA,wBAAIA,UAAU,uBACZ,yBAAKA,UAAU,kDACZkG,GAEH,yBAAKlG,UAAU,2EACb,0BAAMA,UAAU,WAAhB,UACCmG,EAFH,UASV,yBAAKnG,UAAU,gCACb,0BACEkE,QAAS,WACP,EAAKpD,MAAMgG,aAAa,YAG1B,kBAAC,EAAD,CAAQzB,SAAUxE,KAAKC,MAAMkG,WAAa,KAAO,WAIvD,yBAAKhH,UAAU,8CACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,8CACb,yBACEA,UAAU,qBACVG,KAAK,OACLC,QAAQ,YACRwB,OAAO,gBAEP,0BACEC,cAAc,QACdC,eAAe,QACfC,YAAY,IACZL,EAAE,sKAIR,yBAAK1B,UAAU,mBACb,4BACE,wBAAIA,UAAU,wDAAd,sBAGA,wBAAIA,UAAU,uBACZ,yBAAKA,UAAU,kDACZsG,GAEH,yBAAKtG,UAAU,yEACb,0BAAMA,UAAU,WAAhB,UACC6G,GAEH,yBAAK7G,UAAU,QACb,oCAEF,yBAAKA,UAAU,2EACb,0BAAMA,UAAU,WAAhB,UACC2G,QAOb,yBAAK3G,UAAU,gCACb,yBAAKA,UAAU,qBACb,0BACEkE,QAASrD,KAAKC,MAAMmE,KACpBjF,UAAU,8GAFZ,oB,GAvKMS,IAAMC,WC8DXuG,E,iLA7DX,OACE,yBAAKjH,UAAU,iBACb,yBAAKA,UAAU,gEACb,yBAAKA,UAAU,sGACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,uEACb,yBACEA,UAAU,6BACVkH,IAAI,mLACJC,IAAI,kBAGR,yBAAKnH,UAAU,wEACb,yBAAKA,UAAU,gCACb,yBAAKA,UAAU,4EAAf,2BAGA,wBAAIA,UAAU,8FAAd,aAGA,uBAAGA,UAAU,wCAAb,kRAOA,yBAAKA,UAAU,QACb,yBAAKA,UAAU,iCACb,uBACEyE,KAAK,8CACLE,OAAO,SACPC,IAAI,uBAEJ,uBAAG5E,UAAU,iPAAb,6BAEE,yBACEA,UAAU,mCACVG,KAAK,eACLC,QAAQ,aAER,0BACEgH,SAAS,UACT1F,EAAE,yLACF2F,SAAS,2B,GA9CjB5G,IAAMC,WC+Lb4G,E,2MA1LbzB,MAAQ,CACN0B,eAAgB,KAChBP,YAAY,EACZD,YAAY,EACZS,aAAc,I,EAGhBC,gBAAkB,SAAApH,GAChB,IAAM+B,EAAU,EAAKtB,MAAMgF,SAASG,QAAO,SAAA3F,GAAC,OAAIA,EAAED,KAAOA,KAAI,GAG7D,EAAKqH,SAAS,CAAEH,eAAgBnF,K,EAGlCuF,wBAA0B,WAGxB,EAAKD,SAAS,CACZF,aAAc,EAAK1G,MAAMgF,SACtB/E,KAAI,SAAAC,GAAG,OAAIA,EAAIJ,aACfgH,OACAC,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE3G,OAAS4G,EAAE5G,OAAS,GAAK,Q,EAIlD6G,iBAAmB,WACjB,EAAKN,SAAS,CAAEH,eAAgB,KAAMC,aAAc,KAGpDvE,SAASgF,KAAKjE,MAAMqB,SAAW,GAC/BpC,SAASgF,KAAKjE,MAAMkE,IAAM,I,EAG5BC,qBAAuB,SAAAC,GACR,WAATA,GACF,EAAKV,SAAS,CAAEX,YAAa,EAAKlB,MAAMkB,aAE7B,WAATqB,GACF,EAAKV,SAAS,CAAEV,YAAa,EAAKnB,MAAMmB,c,EAI5CqB,kBAAoB,WAElBpF,SAASgF,KAAKjE,MAAMqB,SAAW,QAC/BpC,SAASgF,KAAKjE,MAAMkE,IAApB,WAA8BI,OAAOC,QAArC,O,wEAGQ,IAAD,OACCzC,EAAajF,KAAKC,MAAlBgF,SACF0C,EAAiB1C,EACnBA,EAASG,QAAO,SAAA3F,GAAC,MAAwB,WAApBA,EAAEoD,OAAOvC,UAC9B,GACEsH,EAAiB3C,EACnBA,EAASG,QAAO,SAAA3F,GAAC,MAAwB,WAApBA,EAAEoD,OAAOvC,UAC9B,GAPG,EAQ4BN,KAAKgF,MAAhCkB,EARD,EAQCA,WAAYC,EARb,EAQaA,WAEpB,OACE,kBAAC,IAAMrD,SAAP,KACE,yBAAK3D,UAAU,QACb,kBAAC,EAAD,CACE8G,aAAcjG,KAAKsH,qBACnBpB,WAAYlG,KAAKgF,MAAMkB,WACvBC,WAAYnG,KAAKgF,MAAMmB,WACvBlB,SAAUA,EACVb,KAAMpE,KAAK8G,2BAGf,yBAAK3H,UAAS,6BAAwB+G,EAAa,GAAK,WACtD,yBAAK/G,UAAU,gEACb,yBAAKA,UAAU,sGACb,2BAAOA,UAAU,cACf,+BACE,4BACE,wBAAIA,UAAU,gIACZ,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,+DACb,yBACEA,UAAU,uBACVG,KAAK,OACLC,QAAQ,YACRwB,OAAO,gBAEP,0BACEC,cAAc,QACdC,eAAe,QACfC,YAAY,IACZL,EAAE,wMAIR,yBAAK1B,UAAU,QAAf,mBAGJ,wBAAIA,UAAU,gIAAd,YAGA,wBAAIA,UAAU,gIAAd,UAGA,wBAAIA,UAAU,gIAAd,yBAKJ,2BAAOA,UAAU,YACd8F,GACC2C,EAAe1H,KAAI,SAAAqB,GACjB,OACE,kBAAC,EAAD,CACElB,IAAKkB,EAAQ/B,GACb+B,QAASA,EACT6C,KAAM,kBAAM,EAAKwC,gBAAgBrF,EAAQ/B,KACzCqI,MAAO,EAAKV,2BAS9B,yBAAKhI,UAAS,6BAAwBgH,EAAa,GAAK,WACtD,yBAAKhH,UAAU,gEACb,yBAAKA,UAAU,sGACb,2BAAOA,UAAU,cACf,+BACE,4BACE,wBAAIA,UAAU,gIACZ,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,iEACb,yBACEA,UAAU,yBACVG,KAAK,OACLC,QAAQ,YACRwB,OAAO,gBAEP,0BACEC,cAAc,QACdC,eAAe,QACfC,YAAY,IACZL,EAAE,qMAIR,yBAAK1B,UAAU,QAAf,mBAGJ,wBAAIA,UAAU,gIAAd,yBAKJ,2BAAOA,UAAU,YACd8F,GACC0C,EAAezH,KAAI,SAAAqB,GAAO,OACxB,kBAAC,EAAD,CACElB,IAAKkB,EAAQ/B,GACb+B,QAASA,EACT6C,KAAM,kBAAM,EAAKwC,gBAAgBrF,EAAQ/B,KACzCqI,MAAO,EAAKV,2BAQ5B,kBAAC,EAAD,MACA,kBAAC,EAAD,CAEEjF,YAAalC,KAAKmH,iBAClB5F,QAASvB,KAAKgF,MAAM0B,iBAEtB,kBAAC,EAAD,CAEExE,YAAalC,KAAKmH,iBAClBpH,UAAWC,KAAKgF,MAAM2B,oB,GAnLT/G,IAAMC,WC8BdiI,E,iLAhCX,OACE,uBACElE,KAAK,oCACLzE,UAAU,gBACV4I,aAAW,wBACXjE,OAAO,SACPC,IAAI,uBAEJ,yBACE3E,MAAM,KACNC,OAAO,KACPE,QAAQ,cACRD,KAAK,OACLsC,MAAM,WAEN,0BAAMf,EAAE,sDACR,0BACEA,EAAE,2LACFvB,KAAK,eACLH,UAAU,aAEZ,0BACE0B,EAAE,shBACFvB,KAAK,eACLH,UAAU,oB,GA1BHS,IAAMC,WCQnBmI,EAEA,gBAqDSC,E,2MAjDbjD,MAAQ,CACNkD,QAAQ,EACRC,QAAS,I,EAGXhG,kBAAoB,WAClBiG,IACGC,IAAIL,GACJM,MAAK,SAAAnI,GACAA,EAAIoI,MACN,EAAK1B,SAAS,CAEZsB,QAAShI,EAAIoI,KAAKJ,QAAQjI,KAAI,SAACT,EAAGW,GAAJ,sBAAkBX,EAAlB,CAAqBD,GAAIY,OACvD8H,QAAQ,OAIbM,OAAM,SAAAC,GACLhG,QAAQC,IAAI+F,EAAIC,a,wEAKpB,OACE,6BACE,yBAAKvJ,UAAU,qBACb,4BAAQA,UAAU,SAChB,yBAAKA,UAAU,0CACb,wBAAIA,UAAU,gDAAd,QAGA,wBAAIA,UAAU,6CAAd,wCAMN,0BAAMA,UAAU,UACd,yBAAKA,UAAU,gDACZa,KAAKgF,MAAMkD,QAAU,kBAAC,EAAD,CAAUjD,SAAUjF,KAAKgF,MAAMmD,WACnDnI,KAAKgF,MAAMkD,QAAU,kBAAC,EAAD,QAG3B,kBAAC,EAAD,W,GA5CatI,IAAMC,WCRZ8I,MAJf,WACE,OAAO,kBAAC,EAAD,OCETC,IAASC,OAAO,kBAAC,EAAD,MAASzG,SAAS0G,eAAe,W","file":"static/js/main.f8b1fb57.chunk.js","sourcesContent":["import React from 'react'\n\nclass Empty extends React.Component {\n  render() {\n    return (\n      <div className='bg-gray-50 rounded-lg shadow px-5 py-6 sm:px-6'>\n        <div className='py-12 overflow-hidden md:py-20 lg:py-24'>\n          <div className='relative max-w-screen-xl mx-auto px-4 sm:px-6 lg:px-8'>\n            <svg\n              className='absolute top-full right-full transform translate-x-1/3 -translate-y-1/4 lg:translate-x-1/2 xl:-translate-y-1/2'\n              width='404'\n              height='404'\n              fill='none'\n              viewBox='0 0 404 404'\n            >\n              <defs>\n                <pattern\n                  id='svg-pattern-squares-1'\n                  x='0'\n                  y='0'\n                  width='20'\n                  height='20'\n                  patternUnits='userSpaceOnUse'\n                >\n                  <rect\n                    x='0'\n                    y='0'\n                    width='4'\n                    height='4'\n                    className='text-gray-200'\n                    fill='currentColor'\n                  />\n                </pattern>\n              </defs>\n              <rect\n                width='404'\n                height='404'\n                fill='url(#svg-pattern-squares-1)'\n              />\n            </svg>\n\n            <div className='relative'>\n              <blockquote className='mt-8'>\n                <div className='max-w-3xl mx-auto text-center text-2xl leading-9 font-medium text-gray-800'>\n                  <p>No findings found.</p>\n                </div>\n              </blockquote>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Empty\n","import React from 'react'\n\nclass Resources extends React.Component {\n  render() {\n    const { resources } = this.props\n\n    if (resources) {\n      return (\n        <div className='flex flex-col'>\n          <div className='-my-2 py-2 overflow-x-auto sm:-mx-6 sm:px-6 lg:-mx-8 lg:px-8'>\n            <div className='py-4 pl-2 align-middle inline-block min-w-full overflow-hidden sm:rounded-lg bg-gray-100'>\n              <table className='min-w-full'>\n                <tbody>\n                  {resources.map((res, idx) => (\n                    <tr className='' key={idx}>\n                      <td\n                        className={`px-2 py-0 whitespace-no-wrap text-sm leading-5 font-medium text-${\n                          res.status === 'failed' ? 'red-500' : 'gray-900'\n                        }`}\n                      >\n                        {res.status}\n                      </td>\n                      <td className='px-2 py-0 whitespace-no-wrap text-sm leading-5 text-gray-500'>\n                        {res.resource}\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      )\n    } else return null\n  }\n}\n\nexport default Resources\n","import React from 'react'\n\nconst COLOR = 'text-gray-400'\n\nclass Icon extends React.Component {\n  renderIconGlobalOld = size => {\n    return (\n      <svg\n        xmlns='http://www.w3.org/2000/svg'\n        viewBox='0 0 24 24'\n        width={size}\n        height={size}\n        className={COLOR}\n        fill='currentColor'\n      >\n        <path\n          className='heroicon-ui'\n          d='M4.06 13a8 8 0 0 0 5.18 6.51A18.5 18.5 0 0 1 8.02 13H4.06zm0-2h3.96a18.5 18.5 0 0 1 1.22-6.51A8 8 0 0 0 4.06 11zm15.88 0a8 8 0 0 0-5.18-6.51A18.5 18.5 0 0 1 15.98 11h3.96zm0 2h-3.96a18.5 18.5 0 0 1-1.22 6.51A8 8 0 0 0 19.94 13zm-9.92 0c.16 3.95 1.23 7 1.98 7s1.82-3.05 1.98-7h-3.96zm0-2h3.96c-.16-3.95-1.23-7-1.98-7s-1.82 3.05-1.98 7zM12 22a10 10 0 1 1 0-20 10 10 0 0 1 0 20z'\n        />\n      </svg>\n    )\n  }\n\n  renderIconGlobal = size => {\n    return (\n      <svg\n        fill='none'\n        viewBox='0 0 28 28'\n        stroke='currentColor'\n        className={COLOR}\n      >\n        <path\n          strokeLinecap='round'\n          strokeLinejoin='round'\n          strokeWidth='1.2'\n          d='M3.055 11H5a2 2 0 012 2v1a2 2 0 002 2 2 2 0 012 2v2.945M8 3.935V5.5A2.5 2.5 0 0010.5 8h.5a2 2 0 012 2 2 2 0 104 0 2 2 0 012-2h1.064M15 20.488V18a2 2 0 012-2h3.064M21 12a9 9 0 11-18 0 9 9 0 0118 0z'\n        />\n      </svg>\n    )\n  }\n\n  renderIconAWS = size => {\n    return (\n      <svg\n        xmlns='http://www.w3.org/2000/svg'\n        viewBox='0 0 24 24'\n        width={size}\n        height={size}\n        className={COLOR}\n        fill='currentColor'\n      >\n        <path d='M 20.455078 5.4121094 C 20.104078 5.4121094 19.769219 5.4528281 19.449219 5.5488281 C 19.130219 5.6448281 18.858141 5.7808437 18.619141 5.9648438 C 18.380141 6.1408438 18.188922 6.3631406 18.044922 6.6191406 C 17.900922 6.8741406 17.828125 7.1708594 17.828125 7.5058594 C 17.828125 7.9208594 17.963562 8.3111094 18.226562 8.6621094 C 18.489563 9.0211094 18.920906 9.2935625 19.503906 9.4765625 L 20.660156 9.8359375 C 21.051156 9.9639375 21.322797 10.098 21.466797 10.25 C 21.610797 10.402 21.681641 10.584594 21.681641 10.808594 C 21.681641 11.135594 21.538578 11.391406 21.267578 11.566406 C 20.996578 11.742406 20.603562 11.830078 20.101562 11.830078 C 19.782563 11.830078 19.471344 11.798375 19.152344 11.734375 C 18.841344 11.670375 18.544438 11.574078 18.273438 11.455078 C 18.193438 11.423078 18.122219 11.391 18.074219 11.375 C 18.026219 11.359 17.977687 11.351563 17.929688 11.351562 C 17.809687 11.351562 17.746094 11.430656 17.746094 11.597656 L 17.746094 12.005859 C 17.746094 12.077859 17.762922 12.157516 17.794922 12.228516 C 17.827922 12.303516 17.915969 12.381125 18.042969 12.453125 C 18.250969 12.573125 18.561937 12.677438 18.960938 12.773438 C 19.359938 12.869438 19.774453 12.917969 20.189453 12.917969 C 20.596453 12.917969 20.971078 12.860047 21.330078 12.748047 C 21.673078 12.644047 21.969797 12.502734 22.216797 12.302734 C 22.463797 12.110734 22.654828 11.870609 22.798828 11.599609 C 22.934828 11.328609 23.007813 11.016828 23.007812 10.673828 C 23.007812 10.258828 22.887625 9.8836406 22.640625 9.5566406 C 22.393625 9.2296406 21.977344 8.9740156 21.402344 8.7910156 L 20.269531 8.4316406 C 19.846531 8.2956406 19.552578 8.1441875 19.392578 7.9921875 C 19.232578 7.8401875 19.152344 7.6497812 19.152344 7.4257812 C 19.152344 7.0987813 19.280344 6.8677969 19.527344 6.7167969 C 19.774344 6.5647969 20.134844 6.4921875 20.589844 6.4921875 C 21.156844 6.4921875 21.668047 6.5976875 22.123047 6.8046875 C 22.259047 6.8686875 22.361781 6.9003906 22.425781 6.9003906 C 22.545781 6.9003906 22.609375 6.8115312 22.609375 6.6445312 L 22.609375 6.2675781 C 22.609375 6.1555781 22.585109 6.0688594 22.537109 6.0058594 C 22.489109 5.9338594 22.409828 5.8686875 22.298828 5.8046875 C 22.218828 5.7566875 22.107844 5.7081563 21.964844 5.6601562 C 21.820844 5.6121562 21.669766 5.5732031 21.509766 5.5332031 C 21.341766 5.5012031 21.174234 5.4693125 20.990234 5.4453125 C 20.814234 5.4213125 20.631078 5.4121094 20.455078 5.4121094 z M 3.9941406 5.4296875 C 3.5551406 5.4296875 3.1390469 5.4780313 2.7480469 5.5820312 C 2.3560469 5.6770312 2.0211875 5.7974063 1.7421875 5.9414062 C 1.6301875 5.9974063 1.5595313 6.0524219 1.5195312 6.1074219 C 1.4795313 6.1634219 1.4628906 6.2606719 1.4628906 6.3886719 L 1.4628906 6.7792969 C 1.4628906 6.9472969 1.5188594 7.0253906 1.6308594 7.0253906 C 1.6628594 7.0253906 1.7037656 7.0179531 1.7597656 7.0019531 C 1.8147656 6.9859531 1.9091094 6.9544375 2.0371094 6.8984375 C 2.3161094 6.7864375 2.6053906 6.6999062 2.9003906 6.6289062 C 3.1953906 6.5569062 3.4827188 6.5234375 3.7617188 6.5234375 C 4.3767188 6.5234375 4.8075 6.643625 5.0625 6.890625 C 5.3095 7.137625 5.4375 7.5609688 5.4375 8.1679688 L 5.4375 8.7519531 C 5.1185 8.6799531 4.8155313 8.6142188 4.5195312 8.5742188 C 4.2245313 8.5342188 3.9448281 8.5117188 3.6738281 8.5117188 C 2.8518281 8.5117188 2.20575 8.7197656 1.71875 9.1347656 C 1.23275 9.5497656 0.9921875 10.099344 0.9921875 10.777344 C 0.9921875 11.416344 1.1910313 11.926547 1.5820312 12.310547 C 1.9730313 12.693547 2.5096875 12.886719 3.1796875 12.886719 C 4.1216875 12.886719 4.9023906 12.518203 5.5253906 11.783203 C 5.6133906 11.967203 5.6944375 12.119859 5.7734375 12.255859 C 5.8534375 12.383859 5.9495469 12.510859 6.0605469 12.630859 C 6.1405469 12.702859 6.2198281 12.742188 6.2988281 12.742188 C 6.3628281 12.742188 6.4358125 12.717922 6.5078125 12.669922 L 7.0097656 12.335938 C 7.1137656 12.255937 7.1621094 12.174703 7.1621094 12.095703 C 7.1621094 12.039703 7.1454688 11.976109 7.1054688 11.912109 C 6.9934687 11.704109 6.9145625 11.513891 6.8515625 11.337891 C 6.7955625 11.161891 6.7636719 10.921953 6.7636719 10.626953 L 6.7460938 10.626953 L 6.7460938 8.0390625 C 6.7460938 7.1610625 6.5239844 6.5071719 6.0839844 6.0761719 C 5.6379844 5.6461719 4.9441406 5.4296875 3.9941406 5.4296875 z M 7.7050781 5.6210938 C 7.5770781 5.6210938 7.5136719 5.6942656 7.5136719 5.8222656 C 7.5136719 5.8782656 7.5379375 5.981625 7.5859375 6.140625 L 9.4609375 12.310547 C 9.5089375 12.462547 9.5649062 12.573094 9.6289062 12.621094 C 9.6929063 12.677094 9.7886406 12.701172 9.9316406 12.701172 L 10.617188 12.701172 C 10.761188 12.701172 10.8735 12.677094 10.9375 12.621094 C 11.0015 12.565094 11.049844 12.461734 11.089844 12.302734 L 12.318359 7.1621094 L 13.554688 12.310547 C 13.586688 12.470547 13.643031 12.574859 13.707031 12.630859 C 13.771031 12.686859 13.874391 12.710937 14.025391 12.710938 L 14.712891 12.710938 C 14.848891 12.710938 14.951625 12.678859 15.015625 12.630859 C 15.079625 12.582859 15.135594 12.477359 15.183594 12.318359 L 17.107422 6.1484375 C 17.139422 6.0604375 17.154109 5.9972188 17.162109 5.9492188 C 17.170109 5.9012187 17.179688 5.8603125 17.179688 5.8203125 C 17.179688 5.6843125 17.106516 5.6210937 16.978516 5.6210938 L 16.236328 5.6210938 C 16.092328 5.6210938 15.989781 5.6531719 15.925781 5.7011719 C 15.869781 5.7491719 15.813625 5.8527188 15.765625 6.0117188 L 14.384766 11.359375 L 13.123047 6.0117188 C 13.091047 5.8597187 13.036656 5.7491719 12.972656 5.7011719 C 12.908656 5.6451719 12.803344 5.6210938 12.652344 5.6210938 L 12.013672 5.6210938 C 11.869672 5.6210938 11.759313 5.6531719 11.695312 5.7011719 C 11.631312 5.7491719 11.582969 5.8527188 11.542969 6.0117188 L 10.300781 11.296875 L 8.9589844 6.0136719 C 8.9109844 5.8616719 8.8628281 5.7491719 8.7988281 5.7011719 C 8.7428281 5.6451719 8.6392812 5.6210938 8.4882812 5.6210938 L 7.7050781 5.6210938 z M 3.9707031 9.4609375 C 4.2177031 9.4609375 4.4657031 9.4777656 4.7207031 9.5097656 C 4.9757031 9.5417656 5.222125 9.5885312 5.453125 9.6445312 L 5.453125 9.9804688 C 5.453125 10.251469 5.4210469 10.482828 5.3730469 10.673828 C 5.3250469 10.865828 5.2305156 11.033547 5.1035156 11.185547 C 4.8875156 11.424547 4.6327031 11.599312 4.3457031 11.695312 C 4.0587031 11.791313 3.7864375 11.839844 3.5234375 11.839844 C 3.1564375 11.839844 2.8765469 11.743922 2.6855469 11.544922 C 2.4855469 11.352922 2.390625 11.074219 2.390625 10.699219 C 2.390625 10.300219 2.51825 9.99725 2.78125 9.78125 C 3.04425 9.56525 3.4357031 9.4609375 3.9707031 9.4609375 z M 22.236328 14.361328 C 21.396203 14.373203 20.404297 14.560891 19.654297 15.087891 C 19.423297 15.255891 19.46275 15.479266 19.71875 15.447266 C 20.57275 15.343266 22.457969 15.119781 22.792969 15.550781 C 23.127969 15.973781 22.416656 17.754922 22.097656 18.544922 C 22.001656 18.783922 22.210781 18.878312 22.425781 18.695312 C 23.829781 17.514312 24.195203 15.048453 23.908203 14.689453 C 23.764703 14.513953 23.076453 14.349453 22.236328 14.361328 z M 0.17578125 14.837891 C -4.6875e-05 14.859594 -0.078578125 15.072984 0.10742188 15.240234 C 3.2364219 18.066234 7.3795625 19.765625 11.976562 19.765625 C 15.257563 19.765625 19.071266 18.735875 21.697266 16.796875 C 22.128266 16.476875 21.753453 15.989453 21.314453 16.189453 C 18.369453 17.434453 15.169859 18.042969 12.255859 18.042969 C 7.9378594 18.042969 3.7629062 16.852672 0.37890625 14.888672 C 0.30515625 14.844672 0.23439062 14.830656 0.17578125 14.837891 z' />\n      </svg>\n    )\n  }\n\n  renderIconGCP = size => {\n    return (\n      <svg\n        xmlns='http://www.w3.org/2000/svg'\n        viewBox='0 0 50 50'\n        width={size}\n        height={size}\n        className={COLOR}\n        fill='currentColor'\n      >\n        <path d='M 15.6875 4 C 14.085938 4 12.707031 4.886719 11.90625 6.1875 L 6.8125 15.3125 L 11.1875 23 L 17.5 12 L 41.3125 12 L 38.09375 6.1875 C 37.292969 4.886719 35.914063 4 34.3125 4 Z M 18.59375 14 L 12.3125 25 L 17.40625 33.90625 L 18.59375 36 L 31.3125 36 L 37.6875 25 L 31.3125 14 Z M 33.6875 14 L 40 25 L 39.6875 25.5 L 27.90625 46 L 34.3125 46 C 35.914063 46 37.292969 45.113281 38.09375 43.8125 L 47.40625 27.3125 C 48.207031 25.914063 48.207031 24.113281 47.40625 22.8125 L 42.5 14 Z M 5.59375 17.40625 L 2.5 22.8125 C 1.699219 24.210938 1.699219 25.914063 2.5 27.3125 L 11.8125 43.8125 C 12.613281 45.210938 13.992188 46 15.59375 46 L 25.5 46 L 30.1875 38 L 17.5 38 L 15.8125 35 L 15.6875 34.8125 L 10 25 Z M 25 20 C 27.800781 20 30 22.199219 30 25 C 30 27.800781 27.800781 30 25 30 C 22.199219 30 20 27.800781 20 25 C 20 22.199219 22.199219 20 25 20 Z' />\n      </svg>\n    )\n  }\n\n  renderIconAzure = size => {\n    return (\n      <svg\n        xmlns='http://www.w3.org/2000/svg'\n        viewBox='0 0 48 48'\n        width={size}\n        height={size}\n        className={COLOR}\n        fill='currentColor'\n      >\n        <path d='M46 40L29.317 10.852 22.808 23.96 34.267 37.24 13 39.655zM13.092 18.182L2 36.896 11.442 35.947 28.033 5.678z' />\n      </svg>\n    )\n  }\n  renderIconK8s = size => {\n    return (\n      <svg\n        xmlns='http://www.w3.org/2000/svg'\n        viewBox='0 0 32 32'\n        width={size}\n        height={size}\n        className={COLOR}\n        fill='currentColor'\n      >\n        <path d='M 15.964844 1.8203125 L 15.263672 2.1679688 L 5.3046875 7.0546875 C 5.0816875 7.1466875 4.8577656 7.2400313 4.6347656 7.3320312 C 4.5657656 7.6130313 4.4986875 7.8947812 4.4296875 8.1757812 L 1.96875 19.169922 C 1.91575 19.414922 1.8615937 19.659297 1.8085938 19.904297 C 1.9645937 20.122297 2.1213438 20.340594 2.2773438 20.558594 L 9.1699219 29.378906 C 9.3379219 29.582906 9.5058281 29.786234 9.6738281 29.990234 C 9.9288281 29.993234 10.1825 29.997 10.4375 30 L 21.490234 30 C 21.749234 29.997 22.008578 29.993234 22.267578 29.990234 C 22.431578 29.786234 22.595766 29.582906 22.759766 29.378906 L 29.650391 20.558594 C 29.811391 20.354594 29.972766 20.151266 30.134766 19.947266 C 30.076766 19.687266 30.018937 19.427922 29.960938 19.169922 L 27.5 8.1757812 C 27.448 7.9177812 27.39575 7.6583906 27.34375 7.4003906 L 26.623047 7.0566406 L 16.667969 2.1679688 L 15.964844 1.8203125 z M 15.960938 5.4160156 C 16.233422 5.4153125 16.493125 5.5757031 16.609375 5.8457031 C 16.686375 6.0357031 16.680375 6.2382031 16.609375 6.4082031 C 16.461375 6.7622031 16.409094 7.1177031 16.371094 7.4707031 C 16.358094 7.6537031 16.353375 7.8308125 16.359375 8.0078125 C 16.340375 8.1848125 16.429594 8.3601094 16.558594 8.5371094 C 16.693594 8.7141094 16.707562 8.8913594 16.726562 9.0683594 C 18.542562 9.2453594 20.178344 10.065547 21.402344 11.310547 C 21.550344 11.212547 21.692969 11.106609 21.917969 11.099609 C 22.130969 11.086609 22.323312 11.048969 22.445312 10.917969 C 22.580313 10.806969 22.708891 10.6875 22.837891 10.5625 C 23.082891 10.3135 23.320141 10.045078 23.494141 9.7050781 C 23.668141 9.3510781 24.094547 9.2134844 24.435547 9.3964844 C 24.783547 9.5734844 24.918281 10.005516 24.738281 10.353516 C 24.648281 10.536516 24.4925 10.662844 24.3125 10.714844 C 23.9515 10.819844 23.649375 11.009078 23.359375 11.205078 C 23.217375 11.310078 23.076266 11.415203 22.947266 11.533203 C 22.799266 11.631203 22.722062 11.814438 22.664062 12.023438 C 22.619062 12.246438 22.498 12.370953 22.375 12.501953 C 23.212 13.752953 23.695312 15.267578 23.695312 16.892578 C 23.695312 17.141578 23.681109 17.390813 23.662109 17.632812 L 23.669922 17.632812 C 23.836922 17.684812 24.004344 17.72925 24.152344 17.90625 C 24.300344 18.06325 24.454906 18.182312 24.628906 18.195312 C 24.802906 18.234313 24.970531 18.260297 25.144531 18.279297 C 25.498531 18.312297 25.846703 18.325234 26.220703 18.240234 C 26.600703 18.155234 26.973641 18.398156 27.056641 18.785156 C 27.138641 19.163156 26.899531 19.543906 26.519531 19.628906 C 26.326531 19.674906 26.133516 19.627297 25.978516 19.529297 C 25.662516 19.313297 25.328141 19.195656 24.994141 19.097656 C 24.827141 19.051656 24.652375 19.012328 24.484375 18.986328 C 24.317375 18.934328 24.124641 18.986125 23.931641 19.078125 C 23.738641 19.189125 23.564766 19.171203 23.384766 19.158203 L 23.365234 19.158203 C 22.811234 21.025203 21.594375 22.604422 19.984375 23.607422 L 19.984375 23.613281 C 20.036375 23.783281 20.093969 23.948875 20.042969 24.171875 C 19.997969 24.387875 19.989078 24.583234 20.080078 24.740234 C 20.151078 24.897234 20.2285 25.061891 20.3125 25.212891 C 20.4865 25.520891 20.680844 25.828984 20.964844 26.083984 C 21.247844 26.352984 21.267766 26.79875 21.009766 27.09375 C 20.745766 27.38175 20.307578 27.400672 20.017578 27.138672 C 19.869578 27.000672 19.792969 26.818906 19.792969 26.628906 C 19.779969 26.241906 19.682406 25.901547 19.566406 25.560547 C 19.508406 25.396547 19.445188 25.231359 19.367188 25.068359 C 19.309188 24.898359 19.15475 24.781922 18.96875 24.669922 C 18.78875 24.571922 18.698422 24.43225 18.607422 24.28125 C 17.783422 24.58925 16.894797 24.753906 15.966797 24.753906 C 15.051797 24.753906 14.174281 24.589922 13.363281 24.294922 C 13.286281 24.438922 13.196625 24.569969 13.015625 24.667969 C 12.828625 24.772969 12.675188 24.897359 12.617188 25.068359 C 12.540188 25.225359 12.468156 25.388734 12.410156 25.552734 C 12.294156 25.893734 12.191547 26.234094 12.185547 26.621094 C 12.172547 27.014094 11.844031 27.321594 11.457031 27.308594 C 11.071031 27.295594 10.76825 26.967219 10.78125 26.574219 C 10.78725 26.371219 10.878672 26.194313 11.013672 26.070312 C 11.296672 25.808312 11.491875 25.506078 11.671875 25.205078 C 11.755875 25.048078 11.831344 24.891516 11.902344 24.728516 C 11.992344 24.577516 11.986266 24.374203 11.947266 24.158203 C 11.902266 23.955203 11.948 23.791625 12 23.640625 C 10.383 22.651625 9.1470781 21.077937 8.5800781 19.210938 C 8.4320781 19.223938 8.2900469 19.223672 8.1230469 19.138672 C 7.9230469 19.053672 7.7363594 19.001547 7.5683594 19.060547 C 7.3943594 19.093547 7.2285469 19.139406 7.0605469 19.191406 C 6.7255469 19.302406 6.3978906 19.427391 6.0878906 19.650391 C 5.7718906 19.879391 5.3324219 19.801469 5.1074219 19.480469 C 4.8884219 19.159469 4.9603906 18.712234 5.2753906 18.490234 C 5.4363906 18.372234 5.6364062 18.334187 5.8164062 18.367188 C 6.1834062 18.446188 6.5367656 18.418047 6.8847656 18.373047 C 7.0587656 18.353047 7.2333906 18.321391 7.4003906 18.275391 C 7.5743906 18.262391 7.7271406 18.13275 7.8691406 17.96875 C 7.9911406 17.82475 8.1333906 17.765891 8.2753906 17.712891 C 8.2493906 17.443891 8.2363281 17.167578 8.2363281 16.892578 C 8.2363281 15.215578 8.7517656 13.662766 9.6347656 12.384766 C 9.5187656 12.266766 9.4102344 12.149453 9.3652344 11.939453 C 9.3072344 11.729453 9.2300312 11.545266 9.0820312 11.447266 C 8.9470313 11.329266 8.8119219 11.224953 8.6699219 11.126953 C 8.3739219 10.929953 8.0719375 10.747719 7.7109375 10.636719 C 7.3369375 10.531719 7.1165625 10.130812 7.2265625 9.7578125 C 7.3355625 9.3778125 7.7236563 9.1625781 8.0976562 9.2675781 C 8.2846562 9.3265781 8.4374844 9.4570938 8.5214844 9.6210938 C 8.6954844 9.9620937 8.9345469 10.229516 9.1855469 10.478516 C 9.3075469 10.602516 9.443125 10.721172 9.578125 10.826172 C 9.700125 10.957172 9.8934687 10.996766 10.105469 11.009766 C 10.330469 11.016766 10.473094 11.114891 10.621094 11.212891 L 10.626953 11.21875 C 11.837953 10.02675 13.434078 9.2403125 15.205078 9.0703125 C 15.224078 8.8933125 15.238047 8.7160625 15.373047 8.5390625 C 15.502047 8.3620625 15.591266 8.1848125 15.572266 8.0078125 C 15.578266 7.8308125 15.573547 7.6537031 15.560547 7.4707031 C 15.521547 7.1167031 15.470266 6.7631562 15.322266 6.4101562 C 15.167266 6.0501562 15.335453 5.6296563 15.689453 5.4726562 C 15.777953 5.4349063 15.870109 5.41625 15.960938 5.4160156 z M 15.037109 10.408203 C 13.794109 10.585203 12.667625 11.130688 11.765625 11.929688 L 11.964844 12.052734 C 12.563844 12.432734 13.143656 12.833422 13.722656 13.232422 C 14.057656 13.448422 14.374453 13.690922 14.689453 13.919922 C 14.715453 13.547922 14.746156 13.168922 14.785156 12.794922 C 14.849156 12.086922 14.915859 11.371063 15.005859 10.664062 L 15.037109 10.408203 z M 16.892578 10.408203 L 16.892578 10.410156 C 16.892578 10.410156 16.890625 10.410156 16.890625 10.410156 L 16.923828 10.664062 L 16.923828 10.666016 C 17.013828 11.374016 17.078578 12.087922 17.142578 12.794922 C 17.168578 13.076922 17.192891 13.352766 17.212891 13.634766 C 17.213067 13.637691 17.214586 13.639692 17.214844 13.642578 C 17.223568 13.767391 17.231462 13.892813 17.240234 14.017578 C 17.329168 13.984464 17.464438 13.926017 17.617188 13.845703 C 17.624096 13.841568 17.631938 13.842728 17.638672 13.837891 C 17.650079 13.829348 17.662388 13.821041 17.673828 13.8125 C 18.0196 13.617419 18.241429 13.402487 18.314453 13.351562 C 18.893708 12.952076 19.467403 12.552549 20.058594 12.166016 L 20.060547 12.164062 L 20.279297 12.027344 C 20.049047 11.814594 19.802578 11.618609 19.542969 11.441406 C 19.283359 11.264203 19.009547 11.106312 18.724609 10.96875 C 18.439672 10.831188 18.144125 10.712969 17.837891 10.619141 C 17.531656 10.525313 17.216078 10.454203 16.892578 10.408203 z M 10.541016 13.359375 C 10.380385 13.61294 10.234762 13.877947 10.109375 14.154297 C 10.109375 14.154297 10.109375 14.15625 10.109375 14.15625 C 9.9840743 14.432615 9.8778421 14.719717 9.7910156 15.015625 C 9.7910156 15.015625 9.7910156 15.017578 9.7910156 15.017578 C 9.7040156 15.314078 9.6369219 15.618766 9.5917969 15.931641 C 9.5466719 16.244516 9.5234375 16.564625 9.5234375 16.890625 C 9.5234375 17.014625 9.5292969 17.132 9.5292969 17.25 C 9.5292969 17.25 9.5292969 17.251953 9.5292969 17.251953 L 9.8320312 17.146484 C 10.495031 16.904484 11.164125 16.693703 11.828125 16.470703 C 12.146125 16.368703 12.462391 16.270781 12.775391 16.175781 C 12.895391 16.119781 13.016719 16.065766 13.136719 16.009766 C 13.050719 15.911766 12.964906 15.813797 12.878906 15.716797 C 12.659906 15.513797 12.446375 15.30975 12.234375 15.09375 C 11.732375 14.58875 11.236094 14.092219 10.746094 13.574219 L 10.541016 13.359375 z M 21.464844 13.482422 L 21.380859 13.572266 L 21.289062 13.671875 C 20.806062 14.195875 20.310453 14.701078 19.814453 15.205078 C 19.498453 15.533078 19.158078 15.846969 18.830078 16.167969 C 19.268078 16.278969 19.706531 16.396344 20.144531 16.527344 C 20.820531 16.724344 21.490156 16.914719 22.160156 17.136719 L 22.398438 17.216797 C 22.404438 17.111797 22.404297 17.000672 22.404297 16.888672 C 22.404547 16.576172 22.383078 16.267359 22.341797 15.966797 C 22.217895 15.065052 21.913603 14.223812 21.464844 13.482422 z M 16.398438 15.548828 L 15.224609 15.560547 L 14.503906 16.486328 L 14.777344 17.628906 L 15.841797 18.125 L 16.892578 17.603516 L 17.140625 16.455078 L 16.398438 15.548828 z M 13.617188 18.689453 C 13.532187 18.690453 13.401234 18.693125 13.240234 18.703125 C 12.937234 18.742125 12.640891 18.789266 12.337891 18.822266 C 11.635891 18.907266 10.946141 18.992594 10.244141 19.058594 L 9.8964844 19.091797 C 10.013984 19.426047 10.158922 19.747719 10.326172 20.054688 C 10.493422 20.361656 10.682781 20.653359 10.894531 20.927734 C 11.106281 21.202109 11.338844 21.458844 11.589844 21.695312 C 11.840844 21.931781 12.111484 22.148547 12.396484 22.341797 L 12.486328 22.066406 C 12.705328 21.385406 12.937781 20.716016 13.175781 20.041016 C 13.285781 19.713016 13.400438 19.391453 13.523438 19.064453 C 13.567438 18.907453 13.597187 18.776453 13.617188 18.689453 z M 18.365234 18.742188 C 18.402234 18.834187 18.460344 18.97925 18.527344 19.15625 C 18.637344 19.45125 18.74075 19.745875 18.84375 20.046875 C 19.06875 20.714875 19.300672 21.390266 19.513672 22.072266 L 19.583984 22.308594 C 19.864234 22.113594 20.12875 21.896172 20.375 21.660156 C 20.62125 21.424141 20.849391 21.168797 21.056641 20.896484 C 21.263891 20.624172 21.450031 20.335141 21.613281 20.03125 C 21.776531 19.727359 21.917 19.408875 22.03125 19.078125 L 21.806641 19.064453 C 21.104641 19.018453 20.407078 18.954672 19.705078 18.888672 C 19.402078 18.862672 19.107687 18.829875 18.804688 18.796875 C 18.619688 18.775875 18.467234 18.755187 18.365234 18.742188 z M 15.972656 19.794922 C 15.921656 19.893922 15.871219 20.001234 15.824219 20.115234 C 15.808781 20.152863 15.794826 20.189832 15.78125 20.226562 C 15.78026 20.228305 15.778306 20.228693 15.777344 20.230469 C 15.629344 20.512469 15.475453 20.787641 15.314453 21.056641 C 14.960453 21.672641 14.606422 22.289578 14.232422 22.892578 L 14.070312 23.154297 C 14.070312 23.154297 14.072266 23.154297 14.072266 23.154297 C 14.371205 23.249015 14.68218 23.320987 14.998047 23.369141 C 15.313912 23.417294 15.638975 23.441308 15.966797 23.441406 C 16.30412 23.441304 16.636321 23.414806 16.960938 23.363281 C 16.960938 23.363281 16.962891 23.363281 16.962891 23.363281 C 17.287477 23.311658 17.604751 23.236068 17.910156 23.134766 L 17.761719 22.884766 C 17.387719 22.281766 17.039406 21.658969 16.691406 21.042969 C 16.536406 20.773969 16.389047 20.505469 16.248047 20.230469 C 16.156047 20.084469 16.064656 19.940922 15.972656 19.794922 z' />\n      </svg>\n    )\n  }\n\n  render() {\n    const { finding, size } = this.props\n\n    switch (finding.platform.toLowerCase()) {\n      case 'aws':\n        return this.renderIconAWS(size)\n      case 'gcp':\n        return this.renderIconGCP(size)\n      case 'azure':\n        return this.renderIconAzure(size)\n      case 'k8s':\n        return this.renderIconK8s(size)\n      default:\n        return this.renderIconGlobal(size)\n    }\n  }\n}\n\nexport default Icon\n","import React from 'react'\n\nconst SeverityMedium = 0.4\nconst SeverityHigh = 0.8\n\nclass Badge extends React.Component {\n  render() {\n    const { value } = this.props\n\n    let color = 'bg-gray-100 text-gray-800'\n    let text = 'Low'\n\n    if (value >= SeverityMedium) {\n      color = 'bg-yellow-100 text-yellow-800'\n      text = 'Medium'\n    }\n    if (value >= SeverityHigh) {\n      color = 'bg-red-100 text-red-800'\n      text = 'High'\n    }\n\n    return (\n      <span\n        className={`inline-flex items-center px-2 py-0.5 rounded text-xs font-medium leading-4 ${color}`}\n      >\n        {text}\n      </span>\n    )\n  }\n}\n\nexport default Badge\n","import React from 'react'\nimport Resources from './Resources'\nimport Icon from './Icon'\nimport Badge from './Badge'\n\nclass Modal extends React.Component {\n  handleEscapeKey = event => {\n    if (event.keyCode === 27) {\n      this.props.handleClose()\n    }\n  }\n\n  componentDidMount = () => {\n    // listen for escape key\n    document.addEventListener('keydown', this.handleEscapeKey, false)\n  }\n\n  componentWillUnmount = () => {\n    // stop listening for escape key\n    document.removeEventListener('keydown', this.handleEscapeKey, false)\n  }\n\n  renderFailedFields = finding => {\n    console.log(JSON.stringify(finding.result))\n    if (finding.result.status === 'failed') {\n      return (\n        <React.Fragment>\n          <div className='sm:grid sm:grid-cols-4 sm:gap-4 sm:px-6 sm:py-5'>\n            <dt className='text-sm leading-5 font-medium text-gray-700'>\n              Severity\n            </dt>\n            <dd className='mt-1 text-sm leading-5 sm:mt-0 sm:col-span-3'>\n              <Badge value={finding.severity} />\n            </dd>\n          </div>\n          <div className='mt-8 sm:mt-0 sm:grid sm:grid-cols-4 sm:gap-4 sm:border-t sm:border-gray-200 sm:px-6 sm:py-5'>\n            <dt className='text-sm leading-5 font-medium text-gray-700'>\n              Remediation Effort\n            </dt>\n            <dd className='mt-1 text-sm leading-5 sm:mt-0 sm:col-span-3'>\n              <Badge value={finding.effort} />\n            </dd>\n          </div>\n        </React.Fragment>\n      )\n    } else return null\n  }\n\n  render() {\n    const { finding, resources } = this.props\n\n    if (finding) {\n      const refs = finding.references\n\n      return (\n        <div\n          className='fixed bottom-0 inset-x-0 px-4 pb-6 sm:inset-0 sm:p-0 sm:flex sm:items-center sm:justify-center'\n          style={{ display: 'flex' }}\n        >\n          <div\n            className='fixed inset-0 transition-opacity'\n            onClick={this.props.handleClose}\n          >\n            <div className='absolute inset-0 bg-gray-500 opacity-75'></div>\n          </div>\n\n          <div className='modal-body bg-white rounded-lg overflow-hidden shadow-xl transform transition-all max-w-3xl sm:w-full'>\n            <div className='bg-white shadow overflow-hidden  sm:rounded-lg'>\n              <div className='px-4 py-5 border-b border-gray-200 sm:px-6'>\n                <div className='flex content-start flex-wrap'>\n                  <div className='flex-shrink-0 h-10 w-10'>\n                    <Icon finding={finding} size={32} />\n                  </div>\n                  <div className='ml-4'>\n                    <div className='text-gray-700'>\n                      <h3 className='text-lg leading-6 font-medium text-gray-800'>\n                        {finding.category}\n                      </h3>\n                      <p className='mt-1 max-w-2xl text-sm leading-5 text-gray-600'>\n                        {finding.title}\n                      </p>\n                    </div>\n                  </div>\n                  <div className='ml-auto modal-close-button'>\n                    <div\n                      onClick={this.props.handleClose}\n                      className='flex justify-end text-gray-500'\n                    >\n                      <svg\n                        viewBox='0 0 24 24'\n                        stroke='currentColor'\n                        width='24'\n                        height='24'\n                        className='modal-close'\n                      >\n                        <path\n                          strokeLinecap='round'\n                          strokeLinejoin='round'\n                          strokeWidth='2'\n                          d='M6 18L18 6M6 6l12 12'\n                        />\n                      </svg>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className='px-4 py-5 sm:p-0'>\n                <dl>\n                  {this.renderFailedFields(finding)}\n                  <div className='mt-8 sm:mt-0 sm:grid sm:grid-cols-4 sm:gap-4 sm:border-t sm:border-gray-200 sm:px-6 sm:py-5'>\n                    <dt className='text-sm leading-5 font-medium text-gray-700'>\n                      Description\n                    </dt>\n                    <dd className='mt-1 text-sm leading-5 text-gray-600 sm:mt-0 sm:col-span-3'>\n                      {finding.description}\n                    </dd>\n                  </div>\n                  <div className='mt-8 sm:mt-0 sm:grid sm:grid-cols-4 sm:gap-4 sm:border-t sm:border-gray-200 sm:px-6 sm:py-5'>\n                    <dt className='text-sm leading-5 font-medium text-gray-700'>\n                      Affected Resources\n                    </dt>\n                    <dd className='mt-1 text-sm leading-5 text-gray-600 sm:mt-0 sm:col-span-3'>\n                      <Resources resources={finding.resources} />\n                    </dd>\n                  </div>\n                  <div className='mt-8 sm:mt-0 sm:grid sm:grid-cols-4 sm:gap-4 sm:border-t sm:border-gray-200 sm:px-6 sm:py-5'>\n                    <dt className='text-sm leading-5 font-medium text-gray-700'>\n                      Remediation\n                    </dt>\n                    <dd className='mt-1 text-sm leading-5 text-gray-600 sm:mt-0 sm:col-span-3'>\n                      {finding.remediation}\n                    </dd>\n                  </div>\n                  <div className='mt-8 sm:mt-0 sm:grid sm:grid-cols-4 sm:gap-4 sm:border-t sm:border-gray-200 sm:px-6 sm:py-5'>\n                    <dt className='text-sm leading-5 font-medium text-gray-700'>\n                      Validation\n                    </dt>\n                    <dd className='mt-1 text-sm leading-5 text-gray-600 sm:mt-0 sm:col-span-3'>\n                      {finding.validation}\n                    </dd>\n                  </div>\n                  <div className='mt-8 sm:mt-0 sm:grid sm:grid-cols-4 sm:gap-4 sm:border-t sm:border-gray-200 sm:px-6 sm:py-5'>\n                    <dt className='text-sm leading-5 font-medium text-gray-700'>\n                      References\n                    </dt>\n                    <dd className='mt-1 text-sm leading-5 text-gray-600 sm:mt-0 sm:col-span-3'>\n                      <ul className='border border-gray-200 rounded-md'>\n                        {refs &&\n                          refs.map((reference, idx) => (\n                            <li\n                              key={idx}\n                              className={`${\n                                idx > 0 ? 'border-t border-gray-200' : ''\n                              } pl-3 pr-4 py-3 flex items-center justify-between text-sm leading-5`}\n                            >\n                              <div className='w-0 flex-1 flex items-center'>\n                                <svg\n                                  className='flex-shrink-0 h-5 w-5 text-indigo-500 hover:text-indigo-600'\n                                  fill='none'\n                                  viewBox='0 0 24 24'\n                                  stroke='currentColor'\n                                >\n                                  <path\n                                    strokeLinecap='round'\n                                    strokeLinejoin='round'\n                                    strokeWidth='2'\n                                    d='M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14'\n                                  />\n                                </svg>\n                                <span className='ml-2 truncate'>\n                                  <a\n                                    href={reference.url}\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                  >\n                                    {reference.ref}\n                                  </a>\n                                </span>\n                              </div>\n                            </li>\n                          ))}\n                      </ul>\n                    </dd>\n                  </div>\n                </dl>\n              </div>\n            </div>\n          </div>\n        </div>\n      )\n    }\n\n    if (resources && resources.length > 0) {\n      return (\n        <div\n          className='fixed bottom-0 inset-x-0 px-4 pb-6 sm:inset-0 sm:p-0 sm:flex sm:items-center sm:justify-center'\n          style={{ display: 'flex' }}\n        >\n          <div\n            className='fixed inset-0 transition-opacity'\n            onClick={this.props.handleClose}\n          >\n            <div className='absolute inset-0 bg-gray-500 opacity-75'></div>\n          </div>\n\n          <div className='modal-body bg-white rounded-lg overflow-hidden shadow-xl transform transition-all max-w-3xl sm:w-full'>\n            <div className='bg-white shadow overflow-hidden  sm:rounded-lg'>\n              <div className='px-4 py-5 border-b border-gray-200 sm:px-6'>\n                <div className='flex content-start flex-wrap'>\n                  <div className='flex-shrink-0 bg-indigo-500 rounded-md p-3'>\n                    <svg\n                      className='h-6 w-6 text-white'\n                      fill='none'\n                      viewBox='0 0 24 24'\n                      stroke='currentColor'\n                    >\n                      <path\n                        strokeLinecap='round'\n                        strokeLinejoin='round'\n                        strokeWidth='2'\n                        d='M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01'\n                      />\n                    </svg>\n                  </div>\n                  <div className='ml-4'>\n                    <div className='text-gray-700'>\n                      <h3 className='text-lg leading-6 font-medium text-gray-800'>\n                        Affected Resources\n                      </h3>\n                      <p className='mt-1 max-w-2xl text-sm leading-5 text-gray-600'>\n                        Resources discovered by all check results\n                      </p>\n                    </div>\n                  </div>\n                  <div className='ml-auto modal-close-button'>\n                    <div\n                      onClick={this.props.handleClose}\n                      className='flex justify-end text-gray-500'\n                    >\n                      <svg\n                        viewBox='0 0 24 24'\n                        stroke='currentColor'\n                        width='24'\n                        height='24'\n                        className='modal-close'\n                      >\n                        <path\n                          strokeLinecap='round'\n                          strokeLinejoin='round'\n                          strokeWidth='2'\n                          d='M6 18L18 6M6 6l12 12'\n                        />\n                      </svg>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className='px-4 py-5 sm:p-0'>\n                <dl>\n                  <div className='mt-8 sm:mt-0 sm:grid sm:grid-cols-5 sm:gap-4 sm:border-t sm:border-gray-200 sm:px-6 sm:py-5'>\n                    <dt className='text-sm leading-5 font-medium text-gray-700'>\n                      Resources\n                    </dt>\n                    <dd className='mt-1 text-sm leading-5 text-gray-600 sm:mt-0 sm:col-span-4'>\n                      <Resources resources={resources} />\n                    </dd>\n                  </div>\n                </dl>\n              </div>\n            </div>\n          </div>\n        </div>\n      )\n    }\n    return null\n  }\n}\n\nexport default Modal\n","import React from 'react'\nimport Icon from './Icon'\nimport Badge from './Badge'\n\nclass Finding extends React.Component {\n  renderFailColumns = () => {\n    const { finding } = this.props\n    const severity = finding.severity\n    const effort = finding.effort\n\n    return (\n      <React.Fragment>\n        <td className='px-6 py-4 whitespace-no-wrap border-b border-gray-200'>\n          <Badge value={severity} />\n        </td>\n        <td className='px-6 py-4 whitespace-no-wrap border-b border-gray-200 text-sm leading-5 text-gray-500'>\n          <Badge value={effort} />\n        </td>\n      </React.Fragment>\n    )\n  }\n\n  render() {\n    const { finding, open } = this.props\n    const status = finding ? finding.result.status : 'failed'\n\n    return (\n      <tr\n        onClick={open}\n        className={status === 'failed' ? 'finding finding-fail' : 'finding'}\n      >\n        <td className='px-6 py-4 whitespace-no-wrap border-b border-gray-200'>\n          <div className='flex items-center'>\n            <div className='flex-shrink-0 h-10 w-10'>\n              <Icon finding={finding} size={32} />\n            </div>\n            <div className='ml-4'>\n              <div className='text-sm leading-5 font-medium text-gray-900'>\n                {finding.title}\n              </div>\n              <div className='text-sm leading-5 text-gray-500'>\n                {finding.category}\n              </div>\n            </div>\n          </div>\n        </td>\n        {status && status === 'failed' && this.renderFailColumns()}\n        <td className='px-6 py-4 whitespace-no-wrap border-b border-gray-200'>\n          <div className='text-sm leading-5 text-gray-900'>\n            {finding.platform}\n          </div>\n          <div className='text-sm leading-5 text-gray-500'>\n            {finding.resource}\n          </div>\n        </td>\n      </tr>\n    )\n  }\n}\n\nexport default Finding\n","import React from 'react'\n\nclass Toggle extends React.Component {\n  render() {\n    const containerClasses = [\n      'relative',\n      'inline-block',\n      'flex-shrink-0',\n      'h-6',\n      'w-11',\n      'border-2',\n      'border-transparent',\n      'rounded-full',\n      'cursor-pointer',\n      'transition-colors',\n      'ease-in-out',\n      'duration-200',\n      'focus:outline-none',\n      'focus:shadow-outline',\n    ]\n    const handledClasses = [\n      'inline-block',\n      'h-5',\n      'w-5',\n      'rounded-full',\n      'bg-white',\n      'shadow',\n      'transform',\n      'transition',\n      'ease-in-out',\n      'duration-200',\n    ]\n\n    if (this.props.position === 'on') {\n      containerClasses.push('bg-indigo-500')\n      handledClasses.push('translate-x-0')\n    } else {\n      containerClasses.push('bg-gray-200')\n      handledClasses.push('translate-x-5')\n    }\n\n    return (\n      <span\n        className={containerClasses.join(' ')}\n        role='checkbox'\n        aria-checked={this.props.position === 'on'}\n        tabIndex='0'\n      >\n        <span aria-hidden='true' className={handledClasses.join(' ')}></span>\n      </span>\n    )\n  }\n}\n\nexport default Toggle\n","import React from 'react'\nimport Toggle from './Toggle'\n\nclass Stats extends React.Component {\n  state = {}\n\n  render() {\n    const { findings } = this.props\n    const totalResults = findings ? findings.length : 0\n    const totalFailed = findings\n      ? findings.filter(x => x.result.status === 'failed').length\n      : 0\n    const totalPassed = findings\n      ? findings.filter(x => x.result.status === 'passed').length\n      : 0\n\n    const passPercent = findings\n      ? ((totalPassed / totalResults) * 100).toFixed(1)\n      : 0\n    const failPercent = findings\n      ? ((totalFailed / totalResults) * 100).toFixed(1)\n      : 0\n\n    const totalResources = findings\n      ? findings.map(x => x.result.total).reduce((t, v) => t + v)\n      : 0\n    const passResources = findings\n      ? findings.map(x => x.result.passed).reduce((t, v) => t + v)\n      : 0\n    const failResources = findings ? totalResources - passResources : 0\n\n    return (\n      <div className='mt-5 grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-3'>\n        <div className='bg-white overflow-hidden shadow rounded-lg'>\n          <div className='px-4 py-5 sm:p-6'>\n            <div className='flex items-center'>\n              <div className='flex-shrink-0 bg-indigo-500 rounded-md p-3'>\n                <svg\n                  className='h-6 w-6 text-white'\n                  fill='none'\n                  viewBox='0 0 24 24'\n                  stroke='currentColor'\n                >\n                  <path\n                    strokeLinecap='round'\n                    strokeLinejoin='round'\n                    strokeWidth='2'\n                    d='M20.618 5.984A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016zM12 9v2m0 4h.01'\n                  />\n                </svg>\n              </div>\n              <div className='ml-5 w-0 flex-1'>\n                <dl>\n                  <dt className='text-sm leading-5 font-medium text-gray-500 truncate'>\n                    Failed Checks\n                  </dt>\n                  <dd className='flex items-baseline'>\n                    <div className='text-2xl leading-8 font-semibold text-gray-900'>\n                      {totalFailed}\n                    </div>\n                    <div className='ml-2 flex items-baseline text-sm leading-5 font-semibold text-red-600'>\n                      <span className='sr-only'>Failed</span>\n                      {failPercent}%\n                    </div>\n                  </dd>\n                </dl>\n              </div>\n            </div>\n          </div>\n          <div className='bg-gray-50 px-4 py-3 sm:px-6'>\n            <span\n              onClick={() => {\n                this.props.handleToggle('failed')\n              }}\n            >\n              <Toggle position={this.props.showFailed ? 'on' : 'off'} />\n            </span>\n          </div>\n        </div>\n        <div className='bg-white overflow-hidden shadow rounded-lg'>\n          <div className='px-4 py-5 sm:p-6'>\n            <div className='flex items-center'>\n              <div className='flex-shrink-0 bg-indigo-500 rounded-md p-3'>\n                <svg\n                  className='h-6 w-6 text-white'\n                  fill='none'\n                  viewBox='0 0 24 24'\n                  stroke='currentColor'\n                >\n                  <path\n                    strokeLinecap='round'\n                    strokeLinejoin='round'\n                    strokeWidth='2'\n                    d='M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z'\n                  />\n                </svg>\n              </div>\n              <div className='ml-5 w-0 flex-1'>\n                <dl>\n                  <dt className='text-sm leading-5 font-medium text-gray-500 truncate'>\n                    Passed Checks\n                  </dt>\n                  <dd className='flex items-baseline'>\n                    <div className='text-2xl leading-8 font-semibold text-gray-900'>\n                      {totalPassed}\n                    </div>\n                    <div className='ml-2 flex items-baseline text-sm leading-5 font-semibold text-green-600'>\n                      <span className='sr-only'>Passed</span>\n                      {passPercent}%\n                    </div>\n                  </dd>\n                </dl>\n              </div>\n            </div>\n          </div>\n          <div className='bg-gray-50 px-4 py-3 sm:px-6'>\n            <span\n              onClick={() => {\n                this.props.handleToggle('passed')\n              }}\n            >\n              <Toggle position={this.props.showPassed ? 'on' : 'off'} />\n            </span>\n          </div>\n        </div>\n        <div className='bg-white overflow-hidden shadow rounded-lg'>\n          <div className='px-4 py-5 sm:p-6'>\n            <div className='flex items-center'>\n              <div className='flex-shrink-0 bg-indigo-500 rounded-md p-3'>\n                <svg\n                  className='h-6 w-6 text-white'\n                  fill='none'\n                  viewBox='0 0 24 24'\n                  stroke='currentColor'\n                >\n                  <path\n                    strokeLinecap='round'\n                    strokeLinejoin='round'\n                    strokeWidth='2'\n                    d='M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01'\n                  />\n                </svg>\n              </div>\n              <div className='ml-5 w-0 flex-1'>\n                <dl>\n                  <dt className='text-sm leading-5 font-medium text-gray-500 truncate'>\n                    Affected Resources\n                  </dt>\n                  <dd className='flex items-baseline'>\n                    <div className='text-2xl leading-8 font-semibold text-gray-900'>\n                      {totalResources}\n                    </div>\n                    <div className='ml-2 flex items-baseline text-sm leading-5 font-semibold text-red-600'>\n                      <span className='sr-only'>Failed</span>\n                      {failResources}\n                    </div>\n                    <div className='ml-2'>\n                      <span>/</span>\n                    </div>\n                    <div className='ml-2 flex items-baseline text-sm leading-5 font-semibold text-green-600'>\n                      <span className='sr-only'>Passed</span>\n                      {passResources}\n                    </div>\n                  </dd>\n                </dl>\n              </div>\n            </div>\n          </div>\n          <div className='bg-gray-50 px-4 py-4 sm:px-6'>\n            <div className='text-sm leading-5'>\n              <span\n                onClick={this.props.open}\n                className='font-medium text-indigo-600 hover:text-indigo-500 transition ease-in-out duration-150 all-resources-button'\n              >\n                View all\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Stats\n","import React from 'react'\n\nclass Contact extends React.Component {\n  render() {\n    return (\n      <div className='flex flex-col'>\n        <div className='-my-2 py-2 overflow-x-auto sm:-mx-6 sm:px-6 lg:-mx-8 lg:px-8'>\n          <div className='align-middle inline-block min-w-full shadow overflow-hidden sm:rounded-lg border-b border-gray-200'>\n            <div className='relative bg-gray-800'>\n              <div className='h-56 bg-indigo-600 sm:h-72 md:absolute md:left-0 md:h-full md:w-1/2'>\n                <img\n                  className='w-full h-full object-cover'\n                  src='https://images.unsplash.com/photo-1525130413817-d45c1d127c42?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1920&q=60&blend=6875F5&sat=-100&blend-mode=multiply'\n                  alt='Support team'\n                />\n              </div>\n              <div className='relative max-w-screen-xl mx-auto px-4 py-12 sm:px-6 lg:px-8 lg:py-16'>\n                <div className='md:ml-auto md:w-1/2 md:pl-10'>\n                  <div className='text-base leading-6 font-semibold uppercase tracking-wider text-gray-300'>\n                    We’re here to help\n                  </div>\n                  <h2 className='mt-2 text-white text-3xl leading-9 font-extrabold tracking-tight sm:text-4xl sm:leading-10'>\n                    What now?\n                  </h2>\n                  <p className='mt-3 text-lg leading-7 text-gray-300'>\n                    The Managed Kubernetes Inspector Tool helps you spot common\n                    vulnerabilities and configuration mistakes. If you want a\n                    deeper look across your cloud-native infrastructure, our\n                    team of experts can help. A Kickstart Call takes 30 minutes\n                    or less to see if we're a good fit.\n                  </p>\n                  <div className='mt-8'>\n                    <div className='inline-flex rounded-md shadow'>\n                      <a\n                        href='https://calendly.com/darkbit/kickstart-mkit'\n                        target='_blank'\n                        rel='noopener noreferrer'\n                      >\n                        <p className='inline-flex items-center justify-center px-5 py-3 border border-transparent text-base leading-6 font-medium rounded-md text-gray-900 bg-white hover:text-gray-600 focus:outline-none focus:shadow-outline transition duration-150 ease-in-out'>\n                          Schedule a brief kickstart\n                          <svg\n                            className='-mr-1 ml-3 h-5 w-5 text-gray-400'\n                            fill='currentColor'\n                            viewBox='0 0 20 20'\n                          >\n                            <path\n                              fillRule='evenodd'\n                              d='M11 3a1 1 0 100 2h2.586l-6.293 6.293a1 1 0 101.414 1.414L15 6.414V9a1 1 0 102 0V4a1 1 0 00-1-1h-5zM5 5a2 2 0 00-2 2v8a2 2 0 002 2h8a2 2 0 002-2v-3a1 1 0 10-2 0v3H5V7h3a1 1 0 000-2H5z'\n                              clipRule='evenodd'\n                            />\n                          </svg>\n                        </p>\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Contact\n","import React from 'react'\nimport Modal from './Modal'\nimport Finding from './Finding'\nimport Stats from './Stats'\nimport Contact from './Contact'\n\nclass Findings extends React.Component {\n  state = {\n    currentFinding: null,\n    showPassed: true,\n    showFailed: true,\n    allResources: [],\n  }\n\n  handleModalOpen = id => {\n    const finding = this.props.findings.filter(x => x.id === id)[0]\n\n    // this.disableBodyScroll()\n    this.setState({ currentFinding: finding })\n  }\n\n  handleResourceModalOpen = () => {\n    // this.disableBodyScroll()\n\n    this.setState({\n      allResources: this.props.findings\n        .map(res => res.resources)\n        .flat()\n        .sort((a, b) => (a.status > b.status ? 1 : -1)),\n    })\n  }\n\n  handleModalClose = () => {\n    this.setState({ currentFinding: null, allResources: [] })\n\n    // When the modal is hidden, we want to remain at the top of the scroll position\n    document.body.style.position = ''\n    document.body.style.top = ''\n  }\n\n  handleFindingsToggle = mode => {\n    if (mode === 'failed') {\n      this.setState({ showFailed: !this.state.showFailed })\n    }\n    if (mode === 'passed') {\n      this.setState({ showPassed: !this.state.showPassed })\n    }\n  }\n\n  disableBodyScroll = () => {\n    // When the modal is shown, we want a fixed body\n    document.body.style.position = 'fixed'\n    document.body.style.top = `-${window.scrollY}px`\n  }\n\n  render() {\n    const { findings } = this.props\n    const findingsPassed = findings\n      ? findings.filter(x => x.result.status === 'passed')\n      : []\n    const findingsFailed = findings\n      ? findings.filter(x => x.result.status === 'failed')\n      : []\n    const { showFailed, showPassed } = this.state\n\n    return (\n      <React.Fragment>\n        <div className='pb-5'>\n          <Stats\n            handleToggle={this.handleFindingsToggle}\n            showFailed={this.state.showFailed}\n            showPassed={this.state.showPassed}\n            findings={findings}\n            open={this.handleResourceModalOpen}\n          />\n        </div>\n        <div className={`flex flex-col mb-5 ${showFailed ? '' : 'hidden'}`}>\n          <div className='-my-2 py-2 overflow-x-auto sm:-mx-6 sm:px-6 lg:-mx-8 lg:px-8'>\n            <div className='align-middle inline-block min-w-full shadow overflow-hidden sm:rounded-lg border-b border-gray-200'>\n              <table className='min-w-full'>\n                <thead>\n                  <tr>\n                    <th className='px-6 py-3 border-b border-gray-200 bg-gray-50 text-left text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider'>\n                      <div className='flex items-center'>\n                        <div className='flex items-center justify-center h-8 w-8 rounded bg-red-100'>\n                          <svg\n                            className='h-6 w-6 text-red-600'\n                            fill='none'\n                            viewBox='0 0 24 24'\n                            stroke='currentColor'\n                          >\n                            <path\n                              strokeLinecap='round'\n                              strokeLinejoin='round'\n                              strokeWidth='2'\n                              d='M20.618 5.984A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016zM12 9v2m0 4h.01'\n                            />\n                          </svg>\n                        </div>\n                        <div className='ml-6'>Failed Checks</div>\n                      </div>\n                    </th>\n                    <th className='px-6 py-3 border-b border-gray-200 bg-gray-50 text-left text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider'>\n                      Severity\n                    </th>\n                    <th className='px-6 py-3 border-b border-gray-200 bg-gray-50 text-left text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider'>\n                      Effort\n                    </th>\n                    <th className='px-6 py-3 border-b border-gray-200 bg-gray-50 text-left text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider'>\n                      Platform / Category\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className='bg-white'>\n                  {findings &&\n                    findingsFailed.map(finding => {\n                      return (\n                        <Finding\n                          key={finding.id}\n                          finding={finding}\n                          open={() => this.handleModalOpen(finding.id)}\n                          close={this.handleModalClose}\n                        />\n                      )\n                    })}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n        <div className={`flex flex-col mb-5 ${showPassed ? '' : 'hidden'}`}>\n          <div className='-my-2 py-2 overflow-x-auto sm:-mx-6 sm:px-6 lg:-mx-8 lg:px-8'>\n            <div className='align-middle inline-block min-w-full shadow overflow-hidden sm:rounded-lg border-b border-gray-200'>\n              <table className='min-w-full'>\n                <thead>\n                  <tr>\n                    <th className='px-6 py-3 border-b border-gray-200 bg-gray-50 text-left text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider'>\n                      <div className='flex items-center'>\n                        <div className='flex items-center justify-center h-8 w-8 rounded bg-green-100'>\n                          <svg\n                            className='h-6 w-6 text-green-600'\n                            fill='none'\n                            viewBox='0 0 24 24'\n                            stroke='currentColor'\n                          >\n                            <path\n                              strokeLinecap='round'\n                              strokeLinejoin='round'\n                              strokeWidth='2'\n                              d='M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z'\n                            />\n                          </svg>\n                        </div>\n                        <div className='ml-6'>Passed Checks</div>\n                      </div>\n                    </th>\n                    <th className='px-6 py-3 border-b border-gray-200 bg-gray-50 text-left text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider'>\n                      Platform / Category\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className='bg-white'>\n                  {findings &&\n                    findingsPassed.map(finding => (\n                      <Finding\n                        key={finding.id}\n                        finding={finding}\n                        open={() => this.handleModalOpen(finding.id)}\n                        close={this.handleModalClose}\n                      />\n                    ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n        <Contact />\n        <Modal\n          // open={this.state.showModal}\n          handleClose={this.handleModalClose}\n          finding={this.state.currentFinding}\n        />\n        <Modal\n          // open={true}\n          handleClose={this.handleModalClose}\n          resources={this.state.allResources}\n          // resources={findings.map(finding => finding.resources)}\n        />\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Findings\n","import React from 'react'\n\nclass Octo extends React.Component {\n  render() {\n    return (\n      <a\n        href='https://github.com/darkbitio/mkit'\n        className='github-corner'\n        aria-label='View source on GitHub'\n        target='_blank'\n        rel='noopener noreferrer'\n      >\n        <svg\n          width='80'\n          height='80'\n          viewBox='0 0 250 250'\n          fill='#fff'\n          color='#6875f5'\n        >\n          <path d='M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z'></path>\n          <path\n            d='M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2'\n            fill='currentColor'\n            className='octo-arm'\n          ></path>\n          <path\n            d='M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z'\n            fill='currentColor'\n            className='octo-body'\n          ></path>\n        </svg>\n      </a>\n    )\n  }\n}\n\nexport default Octo\n","import React from 'react'\nimport axios from 'axios'\nimport Empty from './Empty'\nimport Findings from './Findings'\nimport Octo from './Octo'\n\n/*\n * findings.json hosted from standalone Express\n * server in development\n */\nconst URL =\n  process.env.NODE_ENV === 'production'\n    ? '/results.json'\n    : 'http://localhost:8000/results.json'\n\nclass Loader extends React.Component {\n  state = {\n    active: false,\n    results: [],\n  }\n\n  componentDidMount = () => {\n    axios\n      .get(URL)\n      .then(res => {\n        if (res.data) {\n          this.setState({\n            // map an Id into each finding for later reference\n            results: res.data.results.map((x, idx) => ({ ...x, id: idx })),\n            active: true,\n          })\n        }\n      })\n      .catch(err => {\n        console.log(err.message)\n      })\n  }\n\n  render() {\n    return (\n      <div>\n        <div className='bg-gray-800 pb-24'>\n          <header className='py-10'>\n            <div className='max-w-7xl mx-auto px-4 sm:px-6 lg:px-8'>\n              <h1 className='text-3xl leading-9 font-extrabold text-white'>\n                MKIT\n              </h1>\n              <h2 className='text-xl leading-9 font-bold text-gray-500'>\n                Managed Kubernetes Inspector Tool\n              </h2>\n            </div>\n          </header>\n        </div>\n        <main className='-mt-32'>\n          <div className='max-w-7xl mx-auto pb-12 px-4 sm:px-6 lg:px-8'>\n            {this.state.active && <Findings findings={this.state.results} />}\n            {!this.state.active && <Empty />}\n          </div>\n        </main>\n        <Octo />\n      </div>\n    )\n  }\n}\n\nexport default Loader\n","import React from 'react'\nimport Loader from './components/Loader'\n\nfunction App() {\n  return <Loader />\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles.css'\nimport './custom.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}